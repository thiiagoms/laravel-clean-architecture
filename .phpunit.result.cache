{"version":1,"defects":{"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::it_should_update_task_title":7,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::itShouldUpdateTaskDescription":7,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::itShouldUpdateTaskStatus":7,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_throw_exception_when_task_does_not_exists":5,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_title":5,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_description":5,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_status":5,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_entire_task":5,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Register\\EloquentRegisterUserRepositoryTest::it_should_create_new_user_and_return_created_user_entity":8,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_email#email is required":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_email#email is invalid":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password is required message when password value does not exists":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password min length message when password is less than 8 characters":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password numbers message when password does not contain at least one number":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password symbols message when password does not contain at least one symbol":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password mixed case message when password does not contain at least one lower and upper case letter":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_return_unauthenticated_message_when_user_email_does_not_exists":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_return_unauthenticated_message_when_user_password_does_not_match":7,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_authenticate_user_and_return_token":7,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskTitle":8,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskDescription":7,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateEntireTaskWhenTaskIsNotDoneOrCancelled":7,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_when_user_is_authenticated_and_task_exists_but_does_not_belongs_to_user":7,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWithInvalidStatus#should throw exception when status is done":7,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWithInvalidStatus#should throw exception when status is cancelled":7,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_description#should return that the description field must be a string when the description field is not a valid string":8,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_status#should return that the status field must be a string when the status field is not a valid string":8,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskTitle":8,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskDescription":5,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskStatus":5,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateEntireTaskData":5,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::it_should_not_allow_to_destroy_task_when_user_is_authenticated_and_task_exists_but_does_not_belongs_to_user":7},"times":{"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::it_should_update_task_title":0.006,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::itShouldUpdateTaskDescription":0.004,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::itShouldUpdateTaskStatus":0.015,"Tests\\Unit\\Infrastructure\\Support\\SanitizerTest::it_should_clean_data#should remove spaces and html tags from string":0.001,"Tests\\Unit\\Infrastructure\\Support\\SanitizerTest::it_should_clean_data#should remove spaces and html tags from each element of array":0.001,"Tests\\Unit\\Infrastructure\\Support\\SanitizerTest::it_should_clean_data#should return empty array if input is empty":0.001,"Tests\\Unit\\Application\\UseCases\\Auth\\Authenticate\\AuthenticateTest::it_should_throw_exception_when_authentication_fails":0.03,"Tests\\Unit\\Application\\UseCases\\Auth\\Authenticate\\AuthenticateTest::it_should_return_token_when_authentication_succeeds":0.069,"Tests\\Unit\\Application\\UseCases\\Auth\\Authenticate\\Service\\AuthenticateUserServiceTest::it_should_return_user_when_user_found_and_password_matches":0.119,"Tests\\Unit\\Application\\UseCases\\Auth\\Authenticate\\Service\\AuthenticateUserServiceTest::it_should_return_null_when_user_not_found":0.003,"Tests\\Unit\\Application\\UseCases\\Auth\\Authenticate\\Service\\AuthenticateUserServiceTest::it_should_return_null_when_user_password_does_not_match":0.138,"Tests\\Unit\\Application\\UseCases\\Task\\Register\\RegisterTaskTest::it_should_throw_exception_when_user_not_found":0.001,"Tests\\Unit\\Application\\UseCases\\Task\\Register\\RegisterTaskTest::it_should_register_task_successfully":0.064,"Tests\\Unit\\Application\\UseCases\\Task\\Register\\Service\\RegisterTaskServiceTest::it_should_register_task":0.057,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_throw_exception_when_task_does_not_exists":0.002,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_title":0.057,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_description":0.067,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_status":0.082,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_entire_task":0.002,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Service\\FindOrFailUserByEmailServiceTest::it_should_throw_exception_when_user_not_found":0.001,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Service\\FindOrFailUserByEmailServiceTest::it_should_return_user_when_found":0.069,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Service\\FindOrFailUserByIdServiceTest::it_should_throw_exception_when_user_not_found":0.001,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Service\\FindOrFailUserByIdServiceTest::it_should_return_user_when_found":0.052,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Validator\\VerifyUserEmailIsAvailableTest::it_should_return_user_when_email_is_available":0.001,"Tests\\Unit\\Application\\UseCases\\User\\Common\\Validator\\VerifyUserEmailIsAvailableTest::it_should_throw_email_already_exists_exception_when_email_is_not_available":0.053,"Tests\\Unit\\Application\\UseCases\\User\\Register\\Service\\RegisterUserServiceTest::it_should_throw_exception_when_email_is_already_in_use":0.001,"Tests\\Unit\\Application\\UseCases\\User\\Register\\Service\\RegisterUserServiceTest::it_should_create_user_successfully":0.002,"Tests\\Unit\\Domain\\Common\\ValueObject\\IdTest::it_should_throw_exception_when_id_is_invalid#it should throw exception when provided id is not a valid UUID":0.001,"Tests\\Unit\\Domain\\Common\\ValueObject\\IdTest::it_should_throw_exception_when_id_is_invalid#it should throw exception when provided id is an empty string":0.001,"Tests\\Unit\\Domain\\Common\\ValueObject\\IdTest::it_should_create_id_when_id_is_valid":0.001,"Tests\\Unit\\Domain\\Entity\\Auth\\Token\\TokenTest::it_should_create_token":0.001,"Tests\\Unit\\Domain\\Entity\\Auth\\Token\\TokenTest::it_should_transform_token_to_array":0,"Tests\\Unit\\Domain\\Entity\\Auth\\Token\\TokenTest::it_should_throw_exception_when_token_is_empty":0.001,"Tests\\Unit\\Domain\\Entity\\Auth\\Token\\TokenTest::it_should_throw_exception_when_type_is_empty":0.001,"Tests\\Unit\\Domain\\Entity\\Auth\\Token\\TokenTest::it_should_throw_exception_when_expires_in_is_empty":0.001,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_create_task_with_valid_data":0.053,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_allow_task_with_todo_status_to_go_to_doing":0.052,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_allow_task_with_todo_status_to_go_to_cancelled":0.054,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_todo_status_goes_to_todo_again":0.053,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_todo_status_goes_to_done":0.054,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_allow_task_with_doing_status_to_go_to_done":0.053,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_allow_task_with_doing_status_to_go_to_cancelled":0.051,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_doing_status_goes_to_todo":0.052,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_doing_status_goes_to_doing_again":0.052,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_done_status_goes_to_todo":0.054,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_done_status_goes_to_doing":0.054,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_done_status_goes_to_done_again":0.053,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_done_status_goes_to_cancelled":0.053,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_cancelled_status_goes_to_todo":0.055,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_cancelled_status_goes_to_doing":0.066,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_cancelled_status_goes_to_done_again":0.076,"Tests\\Unit\\Domain\\Entity\\Task\\TaskTest::it_should_throw_exception_when_task_with_cancelled_status_goes_to_cancelled_again":0.066,"Tests\\Unit\\Domain\\Entity\\Task\\ValueObject\\TitleTest::it_should_throw_exception_when_title_is_not_a_string":0.001,"Tests\\Unit\\Domain\\Entity\\Task\\ValueObject\\TitleTest::it_should_throw_exception_when_title_is_too_long":0.001,"Tests\\Unit\\Domain\\Entity\\Task\\ValueObject\\TitleTest::it_should_create_title_successfully":0.001,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_create_user_with_valid_data":0.143,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_user_to_change_name":0.06,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_user_to_change_email":0.06,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_user_to_change_password":0.215,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_user_to_become_admin":0.108,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_throw_exception_when_non_admin_user_tries_to_become_admin":0.107,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_admin_to_become_user":0.055,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_allow_user_to_confirm_email":0.064,"Tests\\Unit\\Domain\\Entity\\User\\UserTest::it_should_transform_user_to_array":0.063,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\EmailTest::it_should_throw_exception_for_invalid_email#should throw exception when provided email is not a valid email address":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\EmailTest::it_should_throw_exception_for_invalid_email#should throw exception when provided email is a empty string":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\EmailTest::it_should_create_email_with_valid_email":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\EmailTest::it_should_validate_email_matches#0":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\EmailTest::it_should_validate_email_matches#1":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\NameTest::it_should_throw_exception_when_name_is_invalid#should throw exception when provided name is empty":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\NameTest::it_should_throw_exception_when_name_is_invalid#should throw exception when provided name length is less than 3":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\NameTest::it_should_throw_exception_when_name_is_invalid#should throw exception when provided name length is greater than 150":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\NameTest::it_should_throw_exception_when_name_is_invalid#should throw exception when provided name is numeric":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\NameTest::it_should_transform_each_letter_to_upper_case":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password is empty":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password length is less than 8":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password does not contain at least one uppercase letter":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password does not contain at least one lowercase letter":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password does not contain at least one digit":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_throw_exception_when_password_is_invalid#it should throw exception when provided password does not contain at least one special character":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_create_password_when_password_is_valid":0.109,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_create_password_when_provided_password_is_valid_and_not_hashed":0.001,"Tests\\Unit\\Domain\\Entity\\User\\ValueObject\\PasswordTest::it_should_return_false_when_password_doe_not_match":0.106,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Find\\EloquentFindTaskByIdRepositoryTest::it_should_return_task_when_task_with_id_exists_in_database":0.078,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Find\\EloquentFindTaskByIdRepositoryTest::it_should_return_null_when_task_with_id_does_not_exist_in_database":0.002,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\Task\\Register\\EloquentRegisterTaskRepositoryTest::it_should_create_new_task_and_return_created_task_entity":0.11,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Find\\EloquentFindUserByEmailRepositoryTest::it_should_return_user_when_user_with_email_exists_in_database":0.059,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Find\\EloquentFindUserByEmailRepositoryTest::it_should_return_null_when_user_with_email_does_not_exist_in_database":0.002,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Find\\EloquentFindUserByIdRepositoryTest::it_should_return_user_when_user_with_id_exists_in_database":0.059,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Find\\EloquentFindUserByIdRepositoryTest::it_should_return_null_when_user_with_id_does_not_exist_in_database":0.002,"Tests\\Feature\\Infrastructure\\Persistence\\Repository\\User\\Register\\EloquentRegisterUserRepositoryTest::it_should_create_new_user_and_return_created_user_entity":0.137,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_email#email is required":0.217,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_email#email is invalid":0.095,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password is required message when password value does not exists":0.02,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password min length message when password is less than 8 characters":0.015,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password numbers message when password does not contain at least one number":0.063,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password symbols message when password does not contain at least one symbol":0.021,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_validate_password#should return password mixed case message when password does not contain at least one lower and upper case letter":0.019,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_return_unauthenticated_message_when_user_email_does_not_exists":0.147,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_return_unauthenticated_message_when_user_password_does_not_match":0.193,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Auth\\Authenticate\\AuthenticateTest::it_should_authenticate_user_and_return_token":0.227,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Find\\FindTaskTest::it_should_not_allow_to_retrieve_task_when_user_is_not_authenticated":0.012,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Find\\FindTaskTest::it_should_not_allow_when_user_is_authenticated_but_try_to_retrieve_expense_that_does_not_exists":0.147,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Find\\FindTaskTest::it_should_not_allow_to_retrieve_task_when_user_is_authenticated_and_task_exists_but_does_not_belongs_to_user":0.181,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Find\\FindTaskTest::it_should_return_task_that_belongs_to_authenticated_user":0.229,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_not_allow_register_task_when_user_is_not_authenticated":0.032,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_validate_title#should return that the title field is required when the value of the title field is empty":0.135,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_validate_title#should return that the title field is longer than the allowed length when the value of the title field is more than the maximum":0.153,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_validate_title#should return that the title field must be a string when the title field is not a valid string":0.171,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_validate_description#should return that the description field is required when the value of the description field is empty":0.154,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_validate_description#should return that the description field must be a string when the description field is not a valid string":0.134,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\Task\\Register\\RegisterTaskTest::it_should_create_new_task_for_authenticated_user":0.13,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_name#should return name is required message when name value does not exist":0.075,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_name#should return name min length message when name is lower than min length":0.078,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_name#should return name max length message when name length is higher than max length":0.07,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_name#should return name type message when name is not a string":0.067,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_email#should return email is required message when email value does not exists":0.122,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_email#should return email is invalid message when email is not a valid email":0.124,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_email#should return email already exists message when email already exists":0.132,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_password#should return password is required message when password value does not exists":0.019,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_password#should return password min length message when password is less than 8 characters":0.021,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_password#should return password numbers message when password does not contain at least one number":0.021,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_password#should return password symbols message when password does not contain at least one symbol":0.021,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_validate_password#should return password mixed case message when password does not contain at least one lower and upper case letter":0.015,"Tests\\Feature\\Presentation\\Http\\Api\\V1\\User\\Register\\RegisterUserTest::it_should_create_user_and_return_created_user_data":0.121,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldThrowExceptionWhenTaskCannotBeUpdated#done":0.069,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldThrowExceptionWhenTaskCannotBeUpdated#cancelled":0.052,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldThrowExceptionWhenTaskDoesNotExists":0.022,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldThrowExceptionWhenTaskCannotBeUpdated#should throw exception when try to update task with done status":0.056,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldThrowExceptionWhenTaskCannotBeUpdated#should throw exception when try to update task with cancelled status":0.055,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskTitle":0.061,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskDescription":0.054,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskStatus":0.052,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::itShouldUpdateEntireTaskWhenTaskIsNotDoneOrCancelled":0.056,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWhenUserIsNotAuthenticated":0.17,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWhenUserIsAuthenticatedButTaskDoesNotExists":0.241,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWhenUserIsAuthenticatedAndTaskExistsButDoesNotBelongsToUser":0.195,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_when_user_is_not_authenticated":0.014,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_when_user_is_authenticated_but_task_does_not_exists":0.128,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_when_user_is_authenticated_and_task_exists_but_does_not_belongs_to_user":0.189,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWithInvalidStatus#should throw exception when status is done":0.267,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldNotAllowToUpdateTaskWithInvalidStatus#should throw exception when status is cancelled":0.205,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_with_invalid_status#should throw exception when status is done":0.234,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_with_invalid_status#should throw exception when status is cancelled":0.195,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_title":0.217,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskDescription":0.193,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::itShouldUpdateOnlyTaskStatus":0.2,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_title#should return that the title field is longer than the allowed length when the value of the title field is more than the maximum":0.202,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_title#should return that the title field must be a string when the title field is not a valid string":0.205,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_description#should return that the description field must be a string when the description field is not a valid string":0.254,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_with_not_allowed_status#should throw exception when status is done":0.226,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_not_allow_to_update_task_with_not_allowed_status#should throw exception when status is cancelled":0.212,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_status#should return that the status field must be a string when the status field is not a valid string":0.19,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_validate_status#should return that the status field must be one of the allowed values when the status field is not a valid status":0.186,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_description":0.229,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_update_only_task_status":0.243,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Update\\UpdateTaskTest::it_should_update_task_with_all_fields":0.191,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldThrowExceptionWhenTryToUpdateTaskThatDoesNotExistInDatabase":0.108,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskTitle":0.214,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskDescription":0.072,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateOnlyTaskStatus":0.069,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::itShouldUpdateEntireTaskData":0.066,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Destroy\\EloquentDestroyTaskByIdRepositoryTest::ItShouldReturnTrueWhenTaskIsDestroyed":0.223,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Destroy\\EloquentDestroyTaskByIdRepositoryTest::ItShouldReturnFalseWhenTaskIsNotDestroyed":0.021,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::it_should_not_allow_to_destroy_task_when_user_is_not_authenticated":0.016,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::it_should_not_allow_to_destroy_task_when_user_is_authenticated_but_task_does_not_exists":0.128,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::it_should_not_allow_to_destroy_task_when_user_is_authenticated_and_task_exists_but_does_not_belongs_to_user":0.212,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::itShouldDestroyTaskThaBelongsTOoAuthenticatedUser":0.201,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Find\\FindTaskTest::it_should_not_allow_to_retrieve_task_when_user_is_authenticated_but_task_does_not_exists":0.122,"Tests\\Unit\\Application\\UseCases\\Task\\Destroy\\DestroyTaskTest::it_should_return_true_when_task_is_destroyed":0.002,"Tests\\Unit\\Application\\UseCases\\Task\\Destroy\\DestroyTaskTest::it_should_return_false_when_task_is_not_destroyed":0.002,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::it_should_update_task_description":0.004,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\Service\\UpdateTaskServiceTest::it_should_update_task_status":0.003,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_throw_exception_when_task_cannot_be_updated#should throw exception when try to update task with done status":0.055,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_throw_exception_when_task_cannot_be_updated#should throw exception when try to update task with cancelled status":0.055,"Tests\\Unit\\Application\\UseCases\\Task\\Update\\UpdateTaskTest::it_should_update_entire_task_when_task_is_not_done_or_cancelled":0.079,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Destroy\\EloquentDestroyTaskByIdRepositoryTest::it_should_return_true_when_task_is_destroyed":0.196,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Destroy\\EloquentDestroyTaskByIdRepositoryTest::it_should_return_false_when_task_is_not_destroyed":0.004,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::it_should_throw_exception_when_try_to_update_task_that_does_not_exist_in_database":0.062,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::it_should_update_only_task_title":0.088,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::it_should_update_only_task_description":0.066,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::it_should_update_only_task_status":0.071,"Feature\\Infrastructure\\Persistence\\Repository\\Task\\Update\\EloquentUpdateTaskRepositoryTest::it_should_update_entire_task_data":0.074,"Feature\\Presentation\\Http\\Api\\V1\\Task\\Destroy\\DestroyTaskTest::it_should_destroy_task_tha_belongs_t_oo_authenticated_user":0.191}}